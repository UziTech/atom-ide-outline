"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("atom");class t{constructor(){this.element=document.createElement("div"),this.element.classList.add("outline-view")}destroy(){this.element.remove()}getElement(){return this.element}getTitle(){return"Outline"}setOutline({tree:e,editor:t}){const n=this.getElement();n.innerHTML="";const o=document.createElement("ul");!function e({parent:t,entries:n,editor:o,level:i=0}){n.forEach(n=>{const r=document.createElement("li"),s=document.createElement("span");s.style.paddingLeft=10*i+"px",s.innerText=n.representativeName;const a=function(e){const t=document.createElement("span"),n="string"==typeof e&&e.length>0;t.className=n?"icon "+e:"icon";const o=n&&e.replace("type-",""),i=o?o.substring(0,1):"?";return t.innerHTML=`<span>${i}</span>`,t}(n.icon);s.prepend(a),r.append(s),r.addEventListener("click",()=>{atom.workspace.paneForItem(o).activate(),o.cursors[0].setBufferPosition(n.startPosition,{autoscroll:!0})});if(n.children&&!!n.children[0]){const t=document.createElement("ul");t.addEventListener("click",e=>e.stopPropagation()),r.append(t),e({parent:t,entries:n.children,editor:o,level:i+1})}t.append(r)})}({parent:o,entries:e,editor:t}),n.append(o)}clearOutline(){this.getElement().innerHTML=""}presentStatus(e){this.clearOutline();const t=e&&function(e){const t=document.createElement("div");t.className="status";const{title:n="",description:o=""}=e;return t.innerHTML=`<h1>${n}</h1>\n  <span>${o}</span>`,t}(e);if(t){this.getElement().append(t)}}}const n={noEditor:{title:"Outline is unavailable.",description:"Open a text editor."},noProvider:{title:"Provider is unavailable",description:"Looks like a provider for this type of file is not available. Check if a relevant IDE language package is installed and has outline support, or try adding one from Atom's package registry (e.g.: ide-typescript, ide-rust, ide-css, ide-json)."}};let o,i,r,s=null,a=new class{constructor(){this.providers=[]}addProvider(t){return this.providers.push(t),new e.Disposable(()=>this.removeProvider(t))}removeProvider(e){const t=this.providers.indexOf(e);-1!==t&&this.providers.splice(t,1)}getProvider(e){const t=e.getGrammar().scopeName;return this.providers.find(e=>e.grammarScopes.includes(t))}};function c(){const e=atom.workspace.paneForItem(i);if(e)return e.destroyItem(i);const t=atom.workspace.getRightDock(),[n]=t.getPanes();n.addItem(i),n.activateItem(i),t.show()}async function d(e){var t,n;const o=e||atom.workspace.getActiveTextEditor();if(!o)return l("noEditor");const s=a.getProvider(o);if(!s)return l("noProvider");const c=o.getFileName();null===(t=r)||void 0===t||t.add("Outline: "+c);const d=await s.getOutline(o);i.setOutline({tree:d&&d.outlineTrees||[],editor:o}),null===(n=r)||void 0===n||n.clear()}function l(e){const t=n[e];i.presentStatus(t)}exports.activate=function(){o=new e.CompositeDisposable,i=new t,function(){const e=atom.commands.add("atom-workspace",{"outline:toggle":()=>c()});o.add(e)}(),function(){const e=atom.workspace.observeActiveTextEditor(async e=>{var t,n;null===(t=s)||void 0===t||null===(n=t.dispose)||void 0===n||n.call(t),await d(e),s=null==e?void 0:e.onDidChangeCursorPosition(()=>d(e))});o.add(e)}()},exports.consumeOutlineProvider=async function(e){const t=a.addProvider(e);o.add(t),await d()},exports.consumeSignal=function(e){const t=e.create();r=t,o.add(t)},exports.deactivate=function(){o.dispose(),i.destroy()},exports.getOutline=d,exports.outlineProviderRegistry=a,exports.setStatus=l,exports.statuses=n,exports.toggleOutlineView=c;
//# sourceMappingURL=main.js.map
